name: Release

on:
    push:
        tags:
            - "20*.*.*"

jobs:
    build:
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                include:
                    - os: ubuntu-latest
                      platform: linux
                    - os: windows-latest
                      platform: windows
                    - os: macos-latest
                      platform: macos

        steps:
            - uses: actions/checkout@v4

            - name: Set up Python
              uses: actions/setup-python@v4
              with:
                  python-version: 3.11

            - name: Install Poetry
              run: |
                  python -m pip install --upgrade pip
                  pip install poetry

            - name: Install dependencies
              run: poetry install --with dev --with gui

            - name: Build installers
              run: poetry run python scripts/build_installers.py

            - name: Upload artifacts
              uses: actions/upload-artifact@v4
              with:
                  name: oroitz-${{ matrix.platform }}
                  path: dist/
                  retention-days: 30

    release:
        needs: build
        runs-on: ubuntu-latest
        if: startsWith(github.ref, 'refs/tags/v')

        steps:
            - uses: actions/checkout@v4

            - name: Download all artifacts
              uses: actions/download-artifact@v6
              with:
                  path: artifacts/

            - name: Create release archives
              run: |
                  cd artifacts
                  for dir in */; do
                    if [ -d "$dir" ]; then
                      tar -czf "${dir%/}.tar.gz" -C "$dir" .
                    fi
                  done
                  ls -la *.tar.gz

            - name: Create GitHub release
              run: gh release create ${{ github.ref_name }} artifacts/*.tar.gz --generate-notes
